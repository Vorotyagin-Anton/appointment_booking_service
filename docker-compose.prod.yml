version: '3.8'
services:

  gateway:
    container_name: gateway
    build:
      context: docker/gateway
    ports:
      - '80:80'
    depends_on:
      - frontend
      - api

  frontend:
    container_name: frontend
    build:
      context: docker/frontend/nginx/prod
    volumes:
      - ./frontend/dist:/app

  frontend-cli:
    container_name: frontend-cli
    build:
      context: docker/frontend/cli
    volumes:
      - ./frontend:/app
    tty: true

  api:
    container_name: api
    build:
      context: docker/api/nginx
    volumes:
      - ./api:/var/www/symfony_docker
    depends_on:
      - php
      - database

  php:
    container_name: php
    build:
      context: docker/api/php
    volumes:
      - ./api:/var/www/symfony_docker
      - ./api/php.dev.ini:/usr/local/etc/php/conf.d/php.ini
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - database

  api-cli:
    container_name: api-cli
    build:
      context: docker/api/cli
    volumes:
      - ./api:/var/www/symfony_docker
      - ./api/php.dev.ini:/usr/local/etc/php/conf.d/php.ini
    depends_on:
      - database
    tty: true

  database:
    container_name: database
    image: postgres:14.1
    command: [ "postgres", "-c", "log_statement=all" ]
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - '5599:5432'
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

volumes:
  db_data: